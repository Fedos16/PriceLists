async function FalseRequest(e,t){if(t)showMessage(e.text);else{let t=document.querySelector(".error");t?t.classList.toggle("hidden"):console.log(e.text)}}async function setQueryForServer(e,t){let n={};"params"in e&&(n=e.params);const o="/api/"+e.url;let r=await fetch(o,{method:"POST",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify(n)}),a=await r.json();a.ok?t(a):FalseRequest(a,"alert"in e)}function showMessage(e){alert(e)}function setDateForRow(e,t=!1,n=!1){let o="<tr>";for(let r of e){let e=r;e||(e="");let a=e;n&&(a=`<input type="text" value="${e}" class="only_border_bottom" placeholder="Мой ответ">`),o+=t?`<th>${a}</th>`:`<td>${a}</td>`}o+="</tr>";let r=document.querySelector("table");t?r.querySelector("thead").innerHTML=o:r.querySelector("tbody").insertAdjacentHTML("beforeend",o)}function setDataTableFromExcelRows(e){if(Array.isArray(e))if(e.length>=1){let t=document.querySelector("table");t.querySelector("thead").textContent="",t.querySelector("tbody").textContent="",setDateForRow(e[0],!0,!0);for(let t=1;t<e.length&&!(t>10);t++)setDateForRow(e[t],!1,!1)}else showMessage("Слишком мало строк для распознавания прайс-листа");else showMessage("Excel считался неверно ...")}function readExcel(e){return new Promise((t,n)=>{const o=new FileReader;o.onload=function(e){const n=e.target.result,o=XLSX.read(n,{type:"binary"}),r=o.SheetNames,a=o.Sheets[r[0]],l=XLSX.utils.sheet_to_json(a,{header:1});t(l)},o.onerror=function(e){n([])},o.readAsBinaryString(e)})}async function handleFile(e){const t=document.querySelector("#file"),n=e.size,o=e.type;if(n/1048576>100)t.value="",showMessage("Файле не более 100 МБ");else if("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"!=o)t.value="",showMessage("Формат не Excel");else{setDataTableFromExcelRows(await readExcel(e))}}function myUploadFile(){let e=document.querySelector(".drop_area"),t=document.querySelector("#file");function n(e){e.preventDefault(),e.stopPropagation()}function o(t){e.classList.add("highlight"),e.querySelector("p").textContent="Отпустите, чтобы загрузить"}function r(t){e.classList.remove("highlight"),e.querySelector("p").textContent="Перетащите файл или нажмите здесь"}e&&t&&(["dragenter","dragover","dragleave","drop"].forEach(t=>{e.addEventListener(t,n,!1)}),["dragenter","dragover"].forEach(t=>{e.addEventListener(t,o,!1)}),["dragleave","drop"].forEach(t=>{e.addEventListener(t,r,!1)}),e.addEventListener("drop",function(e){handleFile(e.dataTransfer.files[0])},!1),t.addEventListener("change",function(e){handleFile(this.files[0])},!1))}function actionSetPriceList(){function e(e){const t=e.target.value;t?e.target.closest("div").textContent=t:showMessage("Имя не заполнено")}let t=document.querySelector(".panel_item_new");t&&t.addEventListener("click",function(){let t=document.querySelector(".panel"),n=document.querySelector("#input_new_pricelist");n||(t.insertAdjacentHTML("beforeend",'\n        <div class="panel_item">\n            <div class="panel_item_row">\n                <div class="panel_item_row__name"><input type="text" id="input_new_pricelist" class="only_border_bottom" placeholder="Введите имя прайс листа"></div>\n                <div class="panel_item_row_control">\n                    <div class="control control__edit hidden"></div>\n                    <div class="control control__remove"></div>\n                </div>\n            </div>\n        </div>\n        '),(n=document.querySelector("#input_new_pricelist")).addEventListener("focusout",e),n.addEventListener("keyup",t=>{"enter"==String(t.key).toLocaleLowerCase()&&(t.preventDefault(),e(t))}),n.focus())})}window.onload=(async()=>{console.log("Page Loaded ..."),myUploadFile(),actionSetPriceList()});